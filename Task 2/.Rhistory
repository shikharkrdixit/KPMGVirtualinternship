skip()
0.997*0.001
0.003*0.999
0.015*0.999
0.000997/(0.000997+0.014985)
rm(list=ls())
library(swirl)
swirl()
1/6
(1+2+3+4+5+6)/6
expect_dice()
expect_dice
dice_high
except_dice(dice_high)
expect_dice(dice_high)
expect_dice(dice_low)
skip()
skip()
spop
mean(spop)
allsam
apply(allsam,1,mean)
mean(smeans)
?pbinom
pbinom(6,8,0.50,lower.tail = FALSE)
library(swirl)
swirl()
library(swirl)
swirl()
dice_sqr
sum(dice_sqr*PDF)
ex2_fair <- sum(dice_sqr*PDF)
ex2_fair <- sum(dice_sqr*dice_fair)
ex2_fair-12.25
ex2_fair-3.5^2
sum(dice_high*dice_sqr)-edh^2
sd(apply(matrix(10000),1000),1,mean)
sd(apply(matrix(rnorm(10000),1000),1,mean))
1/sqrt(10)
1/sqrt(120)
sd(apply(matrix(runif(10000),1000),1,mean))
1/sqrt(10)
2/sqrt(10)
sd(apply(matrix(rpois(10000,4),1000),1,mean))
skip()
skip()
rm(list=ls())
x <- c(0.18, -1.54, 0.42, 0.95)
w <- c(2, 1, 3, 1)
sum(x*w)/w
sum(x*w)/sum(w)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
c <- lm(y~x,0)
coef(c)
c <- lm(y~x+0)
coef(c)
data("mtcars")
reg <- lm(mtcars$mpg~mtcars$wt,mtcars)
coef(reg)
x <- c(8.58, 10.46, 9.01, 9.64, 8.86)
xi <- mean(x)
xs <- sd(x)
m <- (x-xi)/xs
m[1]
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
k <- lm(y~x)
coef(k)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
mean(x)
q()
x1<-matrix(1:12,3,4)
x2<-matrix(11:22,3,4)
m = rbind(apply(x1,1,max),apply(x2,1,mean))
y = apply(m,1,sum)
print(y)
array
?apply
x = c(11:14)
y = c(7,8)
print(x * y)
vec1 = c(6,7,8)
vec2 = c("Football","Basketball","Volleyball")
vec3 = c("300", "400", "600")
mylist <- data.frame(vec1,vec2,vec3)
mylist
mylist[[2]][1] = "Tennis"
mylist
mylist[2][2] <- "HMM"
mylist
mylist[[2]][2] <- "HMM"
A =matrix(c(12:20), nrow = 3, ncol = 1, byrow = F)
A
A =matrix(c(12:20), nrow = 3, ncol = 3, byrow = F)
aA
A
A[,2]
A[3,3]
diag(A)
x <- matrix(1:4, 2, 2)
y <- matrix(rep(40, 4), 2, 2)
print(y*x)
x <- 20
f <- function() {
y <- 31
return(c(x, y))
}
f()
func <- function(){
X<-2
Y<-x+5
return(c(X,Y))
}
print(X)
vec1 = c(4,5,6)
vec2 = c("Pen","Pencil","Box")
vec3 = c(100, 200, 300)
stationary <- data.frame(vec1,vec2,vec3)
stationary
print(stationery[1:2,2])
print(stationary[1:2,2])
stationery=rbind(stationary,data.frame(vec1=7,vec2="Eraser",vec3="400"))
stationary=rbind(stationary,data.frame(vec1=7,vec2="Eraser",vec3="400"))
stationary
rm(list=ls())
install.packages("kernlab")
library(kernlab)
data("spam")
plot(density(spam$your[spam$type="nonspam"]),col="blue",xlab="Frequency of 'your'")
plot(density(spam$your[spam$type="nonspam"]),col="blue",xlab="Frequency of 'your'")
plot(density(spam$your[spam$type=="nonspam"]),col="blue",xlab="Frequency of 'your'")
lines(density(spam$your[spam$type=="spam"]),col="red")
abline(v=0.5,col="black")
head(spam)
?spam
preditction <- ifelse(spam$your>0.5,"Spam","Not Spam")
table(preditction,spam$your)
table(preditction,spam$type)
ncol(spam)
table(preditction,spam$type)/length(spam$type)
rm(list=ls())
install.packages("googleVis")
suppressPackageStartupMessages(library(googleVis))
M <- gvisMotionChart(Fruits, "Fruit", "Year",
options=list(width=600, height=400))
print(M,"chart")
plot(G)
G <- gvisGeoChart(Exports, locationvar="Country",
colorvar="Profit",options=list(width=600, height=400))
G
plot(G)
install.packages("plotly")
library(plotly)
plot_ly(mtcars,x=wt,y=mpg,mode="markers")
head(mtcars)
plot_ly(mtcars,x=mtcars$wt,y=mpg,mode="markers")
plot_ly(mtcars,x=mtcars$wt,y=mpg,mode="scatter")
plot_ly(mtcars,x=mtcars$wt,y=mpg,type = "scatter")
plot_ly(mtcars,x=mtcars$wt,y=mpg,type = "scatter",mode="markers")
library(shiny)
library(miniUI)
pickXY <- function() {
ui <- miniPage(
gadgetTitleBar("Select Points by Dragging your Mouse"),
miniContentPanel(
plotOutput("plot", height = "100%", brush = "brush")
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
plot(data_frame$X, data_frame$Y, main = "Plot of Y versus X",
xlab = "X", ylab = "Y")
})
observeEvent(input$done, {
stopApp(brushedPoints(data_frame, input$brush,
xvar = "X", yvar = "Y"))
})
}
runGadget(ui, server)
}
my_data <- data.frame(X = rnorm(100), Y = rnorm(100))
pickXY(my_data)
q()
install.packages("leaflet")
library(leaflet)
mymap <- leaflet() %>%
addTiles()
mymap
mymap <- mymap %>%
addMarkers(lat=39,2980803,lng=-76.5898801,popup="Jeeff Leek's Office")
mymap
install.packages("caret")
library(caret); library(kernlab); data(spam)
intrain <- createDataPartition(y = spam$type,p = 0.75,list = FALSE)
training <- [intrain,]
training <- spam[intrain,]
testing <- spam[-intrain,]
dim(training)
head(training)
dim(testing)
head(testing)
as.factor(training$type)
as.factor(testing$type)
set.seed(32343)
modelfit <- train(type~.,data=training,method="glm")
install.packages("e1071")
modelfit <- train(type~.,data=training,method="glm")
modelfit
modelfit$finalModel
prediction <- predict(modelfit,newdata=testing)
prediciton
predicton
prediction
args(train.default)
library(RWeka)
remove.packages("RWeka")
install.packages("RWeka")
install.packages("RWeka")
library(RWeka)
library(rJava)
q()
setwd("D:/R/KPMG Virtual Internship")
data1 <- read.csv("./Task 1/KPMG_VI_New_raw_data_update_final.xlsx")
head(data1)
library(tidyverse)
library(readxl)
conn <- "D:/R/KPMG Virtual Internship"
data1 <- read_excel(conn,sheet = "Transactions")
conn <- "D:/R/KPMG Virtual Internship/Task 1/KPMG_VI_New_raw_data_update_final.xlsx"
data1 <- read_excel(conn,sheet = "Transactions")
head(data1)
data2 <- read_excel(conn,sheet = "NewCustomerList")
head(data1,2)
head(data2,2)
data3 <- read_excel(conn,sheet = "CustomerDemographic")
head(data3,2)
data3 = head[-1,]
data3 = data3[-1,]
head(data3)
data3 <- read_excel(conn,sheet = "CustomerDemographic")
head(data3,2)
data3 <- read_excel(conn,sheet = "CustomerDemographic",skip=1)
head(data3,2)
head(data3)
head(data3,2)
head(data3,2)
data4 <- read_excel(conn,sheet = "CustomerAddress")
head(data4,2)
head(data1,2)
data1 <- read_excel(conn,sheet = "Transactions",skip=1)
head(data1,2)
data4 <- read_excel(conn,sheet = "CustomerAddress",skip=1)
head(data4,2)
sum(is.na(data1))
sum(is.na(data2))
sum(is.na(data3))
d1na <- is.na(data1)
head(d1na)
d1na <- data1[is.na(data1),]
d1na <- data1[is.na(data1)]
d1na <- data1[,is.na(data1)]
sum(unique(data1$customer_id))
nrow(data1)
length(unique(data1$customer_id))
data2 <- read_excel(conn,sheet = "NewCustomerList",skip=1)
head(data2,2)
length(unique(data2$address))
length(unique((data3$customer_id)))
length(unique(data4$customer_id))
length(unique(data1$customer_id))
length(unique((data3$customer_id)))
length(unique(data4$customer_id))
unique(data3$gender)
sum(is.na(data1))
sum(is.na(data1))
sum(is.na(data3))
sum(is.na(data4))
length(unique(data1$customer_id[!is.na(data1$customer_id)]))
length(unique((data3$customer_id[!is.na(data3$customer_id)])))
length(unique(data4$customer_id!is.na(data4$customer_id)))
length(unique(data1$customer_id[!is.na(data1$customer_id)],))
length(unique((data3$customer_id[!is.na(data3$customer_id)],)))
length(unique((data3$customer_id[!is.na(data3$customer_id),])))
length(unique(data1$customer_id[!is.na(data1$customer_id)],))
length(unique((data3$customer_id[!is.na(data3$customer_id),])))
length(unique(data1$customer_id[!is.na(data1$customer_id)]))
length(unique((data3$customer_id[!is.na(data3$customer_id)])))
length(unique(data4$customer_id[!is.na(data4$customer_id),]))
length(unique(data4$customer_id[!is.na(data4$customer_id)]))
length(unique(data1$customer_id[!is.na(data1$customer_id)]))
length(unique((data3$customer_id[!is.na(data3$customer_id)])))
length(unique(data4$customer_id[!is.na(data4$customer_id)]))
nrow(data1)
nrow(dat3)
nrow(data3)
nrow(data4)
length(unique(data1$customer_id[!is.na(data1$customer_id)]))
setwd("D:/R/KPMG Virtual Internship/Task 2")
conn <- "D:/R/KPMG Virtual Internship/Task 2/KPMG_VI_New_raw_data_update_final.xlsx"
data1 <- read_excel(conn,sheet = "Transactions",skip=1)
data2 <- read_excel(conn,sheet = "NewCustomerList",skip=1)
data3 <- read_excel(conn,sheet = "CustomerDemographic",skip=1)
data4 <- read_excel(conn,sheet = "CustomerAddress",skip=1)
unique(data3$gender)
data1 <- drop_na(data1)
head(data1)
sum(is.na(data1))
nrow(data1)
ncol(data1)
data2 <- drop_na(data2)
sum(is.na(data2))
nrow(data2)
ncol(data2)
data3 <- drop_na(data3)
sum(is.na(data3))
nrow(data3)
ncol(data3)
data4 <- drop_na(data4)
sum(is.na(data4))
nrow(data4)
ncol(data4)
unique(data3$gender)
data3 <- replace(data3$gender,c("Female","Femal","F"),"F)")
head(data3)
data3 <- read_excel(conn,sheet = "CustomerDemographic",skip=1)
data3 <- drop_na(data3)
sum(is.na(data3))
nrow(data3)
ncol(data3)
head(data3)
data3$gender <- replace(data3$gender,c("Female","Femal","F"),"F")
data3$gender <- replace(data3,data$gender = c("Female","Femal","F"),"F")
data3$gender <- replace(data3,data$gender <- c("Female","Femal","F"),"F")
data3 <- replace(data3,data$gender = c("Female","Femal","F"),'F')
data3[data3$gender==c("Female","Femal"")] <- 'F'
data3[data3$gender==c("Female","Femal"")] <- 'F'
data3[data3$gender==c("Female","Femal")] <- 'F'
str(data3)
data3 <- data3 %>%
mutate(gender=recode(gender,Femal="F",Female="F",Male="M"))
head(data3)
data3$DOB<-as.Date(as.numeric(data3$DOB,na.rm=TRUE), origin = "1899-12-30")
data22$DOB<-as.Date(as.numeric(data2$DOB,na.rm=TRUE), origin = "1899-12-30")
data2$DOB<-as.Date(as.numeric(data2$DOB,na.rm=TRUE), origin = "1899-12-30")
data1$product_first_sold_date<-as.Date(as.numeric(data1$product_first_sold_date,na.rm=TRUE), origin = "1899-12-30")
levels(factor(data3$gender))
data4 <- data4 %>%
mutate(state= recode(state, "New South Wales" = "NSW", "Victoria" = "VIC"))
levels(factor(data4$state))
data3 <- data3 %>%
mutate(gender = recode(gender, Female = "F",
Male = "M"))
##df2
levels(factor(data2$gender))
data2 <- data2 %>%
mutate(gender = recode(gender, Female = "F",
Male = "M"))
##df2
levels(factor(data2$gender))
data2 <- data2 %>%
mutate(gender = recode(gender, Female = "F",
Male = "M"))
data5<-merge(data3, data4,, by="customer_id", all=TRUE)
data6 <- merge(data1,data5,by="customer_id",all=TRUE)
names(data6)
library(ggplot2)
ggplot(data6)
unique(data6$state)
data6 <- merge(data1,data5,by="customer_id",all=TRUE,na.rm=T)
unique(data6$state)
ggplot(data6)+
aes(x=data6$state,y=data6$past_3_years_bike_related_purchases)
ggplot(data6)+
aes(x=data6$state,y=data6$past_3_years_bike_related_purchases)+
geom_bar(stat='identity')
data6 <- !is.na(data6)
names(data6)
data6 <- merge(data1,data5,by="customer_id",all=TRUE,na.rm=T)
data6 <- data6[!is.na(),]
data6 <- data6[!is.na(data6),]
names(data6)
ggplot(data6)+
aes(x=data6$state,y=data6$past_3_years_bike_related_purchases)+
geom_bar(stat='identity')
ggplot(data6)+
aes(x=data6$state,y=data6$past_3_years_bike_related_purchases)+
geom_bar(stat='identity')+
aes(fill=data6$state)
data6 <- data6[data6$state!='NA',]
ggplot(data6)+
aes(x=data6$state,y=data6$past_3_years_bike_related_purchases)+
geom_bar(stat='identity')+
aes(fill=data6$state)+
ggplot(data6)+
aes(x=data6$state,y=data6$past_3_years_bike_related_purchases)+
geom_bar(stat='identity')+
aes(fill=data6$state)
ggplot(data6)+
aes(x=data6$state,y=data6$past_3_years_bike_related_purchases)+
geom_bar(stat='identity')+
aes(fill=data6$state)
data6 <- data6[data6$state!="NA",]
ggplot(data6)+
aes(x=data6$state,y=data6$past_3_years_bike_related_purchases)+
geom_bar(stat='identity')+
aes(fill=data6$state)
data6 <- data6[data6$state!="NA"]
data6 %>% filter(state != "NA")
data6 <- data6 %>% filter(state != "NA")
ggplot(data6)+
aes(x=data6$state,y=data6$past_3_years_bike_related_purchases)+
geom_bar(stat='identity')+
aes(fill=data6$state)
ggplot(data6)+
aes(x=data6$state,y=data6$past_3_years_bike_related_purchases)+
geom_bar(stat='identity')+
aes(fill=data6$state)+
labs(x="States",y="Past three years Bike Related Purchases",title="Bike related purchases Statewise")
ggplot(data6)+
aes(x=data6$state,y=data6$past_3_years_bike_related_purchases)+
geom_bar(stat='identity')+
aes(fill=data6$state)+
labs(x="States",y="Past three years Bike Related Purchases",title="Statewise Bike related purchases in last three years")
ggplot(data6)+
aes(x=data6$state,y=data6$past_3_years_bike_related_purchases)+
geom_bar(stat='identity')+
aes(fill=data6$state)+
labs(x="States",y="Past three years Bike Related Purchases",title="Statewise Bike related purchases in last three years")+
scale_fill_gradient("States")
ggplot(data6)+
aes(x=data6$state,y=data6$past_3_years_bike_related_purchases)+
geom_bar(stat='identity')+
aes(fill=data6$state)+
labs(x="States",y="Past three years Bike Related Purchases",title="Statewise Bike related purchases in last three years")+
scale_fill_gradient("States")
ggplot(data6)+
aes(x=data6$state,y=data6$past_3_years_bike_related_purchases)+
geom_bar(stat='identity')+
aes(fill=data6$state)+
labs(x="States",y="Past three years Bike Related Purchases",title="Statewise Bike related purchases in last three years")
names(data6)
ggplot(data6)
head(data6$wealth_segment,2)
ggplot(data6)+
aes(x=data6$state,y=data6$past_3_years_bike_related_purchases)+
geom_bar(stat='identity')+
aes(fill=data6$state)+
labs(x="States",y="Past three years Bike Related Purchases",title="Statewise Bike related purchases in last three years")
head(data6$wealth_segment,2)
data7<- data6 %>%
select(customer_id,list_price,standard_cost,first_name,last_name,gender,past_3_years_bike_related_purchases,DOB,job_title,job_industry_category,wealth_segment,deceased_indicator,owns_car,tenure,address,postcode,state,country,property_valuation)%>%
group_by(customer_id,first_name,last_name,gender,past_3_years_bike_related_purchases,DOB,job_title,job_industry_category,wealth_segment,deceased_indicator,owns_car,tenure,address,postcode,state,country,property_valuation)%>%
summarise (freq=n(),total_revenue=sum(list_price), avg_spend=mean(list_price), median_spend= median(list_price))
head(data7)
drop_na(data7)
head(data7$property_valuation,2)
ggplot(data7) +
aes(x=data7$state,data7$total_revenue)
ggplot(data7) +
aes(x=data7$state,data7$total_revenue)+
geom_point()
ggplot(data7) +
aes(x=data7$state,data7$total_revenue)+
geom_boxplot()
ggplot(data7) +
aes(x=data7$state,data7$total_revenue)+
geom_violin()
ggplot(data7) +
aes(x=data7$state,data7$total_revenue)+
geom_violin()+aes(fill=data7$state)
ggplot(data7) +
aes(x=data7$state,data7$total_revenue)+
geom_violin()+aes(fill=data7$state)+
labs(x="States",y="Revenue",title="Violin Plot suggesting State v/s Revenue Graph")
data6.1<-data6[data6$order_status=="Approved",]
data7.1<- data6.1 %>%
select(customer_id,list_price,standard_cost,first_name,last_name,gender,past_3_years_bike_related_purchases,DOB,job_title,job_industry_category,wealth_segment,deceased_indicator,owns_car,tenure,address,postcode,state,country,property_valuation)%>%
group_by(customer_id,first_name,last_name,gender,past_3_years_bike_related_purchases,DOB,job_title,job_industry_category,wealth_segment,deceased_indicator,owns_car,tenure,address,postcode,state,country,property_valuation)%>%
summarise (freq=n(),total_revenue=sum(list_price),avg_spend=mean(list_price),median_spend= median(list_price))
names(data7.1)
ggplot(data7.1)+
aes(x=data7.1$gender,data7.1$freq)
ggplot(data7.1)+
aes(x=data7.1$gender,y=data7.1$freq)+
geom_crossbar()
ggplot(data7.1)+
aes(x=data7.1$gender,y=data7.1$freq)+
geom_dotplot()
ggplot(data7.1)+
aes(x=data7.1$gender,y=data7.1$freq)+
geom_bar()
ggplot(data7.1)+
aes(x=data7.1$gender,y=data7.1$freq)+
geom_bar(stat='identity')
data7.1 <- data7.1 %>% filter(state != "NA")
ggplot(data7.1)+
aes(x=data7.1$gender,y=data7.1$freq)+
geom_bar(stat='identity')
data7.1 <- data7.1 %>% filter(gender != "NA")
ggplot(data7.1)+
aes(x=data7.1$gender,y=data7.1$freq)+
geom_bar(stat='identity')
ggplot(data7.1)+
aes(x=data7.1$gender,y=data7.1$freq)+
geom_bar(stat='identity')+
aes(fill=data7.1$gender)
ggplot(data7.1)+
aes(x=data7.1$gender,y=data7.1$freq)+
geom_bar(stat='identity')+
aes(fill=data7.1$gender)+
labs(x="Gender",y="Frequency",title = "Gender wise Frequency")
